{"ast":null,"code":"var _jsxFileName = \"E:\\\\md-projects\\\\CAPSTONE\\\\src\\\\Weather.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar currentTemp;\nvar currentDesc;\nvar currentCond;\nvar weatherPhoto;\nvar capitalizedDesc;\nclass DummyWeather extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      temperature: {},\n      main_condition: {},\n      desc_condition: {},\n      photo: {}\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    var endpoint_url = 'https://api.openweathermap.org/data/2.5/weather?lat=47.7638&lon=-52.7652&exclude=minutely,hourly,alerts&units=metric&appid=52b7587313e450e4bd0a567680bdca84';\n    var XMLHttpRequest = require('xhr2');\n    var request = new XMLHttpRequest();\n    var temp = 0;\n    request.open(\"GET\", endpoint_url);\n    request.send();\n    request.onload = () => {\n      let data = request.response;\n      console.log(data);\n      const obj = JSON.parse(data);\n      console.log(obj);\n      let currentWeatherData = obj.main.temp;\n      let minWeatherData = obj.main.temp_min;\n      let maxWeatherData = obj.main.temp_max;\n      let mainConditionWeatherData = obj.weather[0].main;\n      let descriptionConditionWeatherData = obj.weather[0].description;\n      console.log(\"current temp: \" + currentWeatherData);\n      console.log(\"min temp: \" + minWeatherData);\n      console.log(\"max temp: \" + maxWeatherData);\n      console.log(\"main condition: \" + mainConditionWeatherData);\n      console.log(\"descriptive condition: \" + descriptionConditionWeatherData);\n      currentTemp = currentWeatherData.toFixed(1);\n      currentDesc = descriptionConditionWeatherData;\n      capitalizedDesc = currentDesc.replace(/(^\\w{1})|(\\s+\\w{1})/g, letter => letter.toUpperCase());\n      currentCond = mainConditionWeatherData;\n      this.setState({\n        loading: false,\n        temperature: currentWeatherData,\n        desc_condition: descriptionConditionWeatherData,\n        main_condition: mainConditionWeatherData\n      });\n    };\n  }\n  render() {\n    const text = this.state.loading ? \"loading...\" : \"Done\";\n    if (currentCond === \"Thunderstorm\") {\n      weatherPhoto = require('./assets/weather/wWarning.png');\n    } else if (currentCond === \"Drizzle\") {\n      weatherPhoto = require('./assets/weather/wRainy.png');\n    } else if (currentCond === \"Rain\") {\n      weatherPhoto = require('./assets/weather/wRainy.png');\n    } else if (currentCond === \"Snow\") {\n      weatherPhoto = require('./assets/weather/wSnowy.png');\n    } else if (currentCond === \"Atmosphere\") {\n      weatherPhoto = require('./assets/weather/wWarning.png');\n    } else if (currentCond === \"Clear\") {\n      weatherPhoto = require('./assets/weather/wSunny.png');\n    } else if (currentCond === \"Clouds\") {\n      if (currentDesc === \"few clouds: 11-25%\") {\n        weatherPhoto = require('./assets/weather/wCloudySun.png');\n      } else if (currentDesc === \"scattered clouds: 25-50%\") {\n        weatherPhoto = require('./assets/weather/wCloudySun.png');\n      } else {\n        weatherPhoto = require('./assets/weather/wCloudy.png');\n      }\n    }\n    let currentT = new Date();\n    let hour = currentT.getHours();\n    if (hour < \"7\" || hour >= \"19\") {\n      weatherPhoto = require('./assets/weather/wNight.png');\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"weather\",\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"text\", {\n            children: [currentTemp, \"\\u2103\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: weatherPhoto,\n          height: \"50\",\n          width: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"weather-desc\",\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"text\", {\n            children: capitalizedDesc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default DummyWeather;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","currentTemp","currentDesc","currentCond","weatherPhoto","capitalizedDesc","DummyWeather","constructor","state","loading","temperature","main_condition","desc_condition","photo","componentDidMount","setState","endpoint_url","XMLHttpRequest","require","request","temp","open","send","onload","data","response","console","log","obj","JSON","parse","currentWeatherData","main","minWeatherData","temp_min","maxWeatherData","temp_max","mainConditionWeatherData","weather","descriptionConditionWeatherData","description","toFixed","replace","letter","toUpperCase","render","text","currentT","Date","hour","getHours","children","class","style","display","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","src","height","width"],"sources":["E:/md-projects/CAPSTONE/src/Weather.js"],"sourcesContent":["import React, {Component} from \"react\"\r\n\r\nvar currentTemp;\r\nvar currentDesc;\r\nvar currentCond;\r\nvar weatherPhoto;\r\nvar capitalizedDesc;\r\n\r\nclass DummyWeather extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            loading: false,\r\n            temperature: {},\r\n            main_condition: {},\r\n            desc_condition: {},\r\n            photo: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loading: true})\r\n        var endpoint_url = 'https://api.openweathermap.org/data/2.5/weather?lat=47.7638&lon=-52.7652&exclude=minutely,hourly,alerts&units=metric&appid=52b7587313e450e4bd0a567680bdca84';\r\n        var XMLHttpRequest = require('xhr2');\r\n        var request = new XMLHttpRequest();\r\n        var temp = 0;\r\n        request.open(\"GET\", endpoint_url);\r\n        request.send();\r\n        request.onload = () => {\r\n            let data = request.response;\r\n            console.log(data)\r\n            const obj = JSON.parse(data)\r\n            console.log(obj);\r\n\r\n            let currentWeatherData = obj.main.temp;\r\n            let minWeatherData = obj.main.temp_min;\r\n            let maxWeatherData = obj.main.temp_max;\r\n            let mainConditionWeatherData = obj.weather[0].main;\r\n            let descriptionConditionWeatherData = obj.weather[0].description;\r\n\r\n            console.log(\"current temp: \" + currentWeatherData);\r\n            console.log(\"min temp: \" + minWeatherData);\r\n            console.log(\"max temp: \" + maxWeatherData);\r\n            console.log(\"main condition: \" + mainConditionWeatherData);\r\n            console.log(\"descriptive condition: \" + descriptionConditionWeatherData);\r\n\r\n            currentTemp = currentWeatherData.toFixed(1)\r\n            currentDesc = descriptionConditionWeatherData\r\n            capitalizedDesc = currentDesc.replace(/(^\\w{1})|(\\s+\\w{1})/g, letter => letter.toUpperCase());\r\n            currentCond = mainConditionWeatherData\r\n\r\n\r\n            this.setState({\r\n                loading: false,\r\n                temperature: currentWeatherData,\r\n                desc_condition: descriptionConditionWeatherData,\r\n                main_condition: mainConditionWeatherData\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const text = this.state.loading ? \"loading...\" : \"Done\"\r\n        if (currentCond === \"Thunderstorm\")\r\n        {\r\n            weatherPhoto = require('./assets/weather/wWarning.png')\r\n        }\r\n        else if (currentCond === \"Drizzle\")\r\n        {\r\n            weatherPhoto = require('./assets/weather/wRainy.png')\r\n        }\r\n        else if (currentCond === \"Rain\")\r\n        {\r\n            weatherPhoto = require('./assets/weather/wRainy.png')\r\n        }\r\n        else if (currentCond === \"Snow\")\r\n        {\r\n            weatherPhoto = require('./assets/weather/wSnowy.png')\r\n        }\r\n        else if (currentCond === \"Atmosphere\")\r\n        {\r\n            weatherPhoto = require('./assets/weather/wWarning.png')\r\n        }\r\n        else if (currentCond === \"Clear\")\r\n        {\r\n            weatherPhoto = require('./assets/weather/wSunny.png')\r\n        }\r\n        else if (currentCond === \"Clouds\")\r\n        {\r\n            if (currentDesc === \"few clouds: 11-25%\")\r\n            {\r\n                weatherPhoto = require('./assets/weather/wCloudySun.png')\r\n            }\r\n            else if (currentDesc === \"scattered clouds: 25-50%\")\r\n            {\r\n                weatherPhoto = require('./assets/weather/wCloudySun.png')\r\n            }\r\n            else\r\n            {\r\n                weatherPhoto = require('./assets/weather/wCloudy.png')\r\n            }\r\n        }\r\n        let currentT = new Date();\r\n        let hour = currentT.getHours();\r\n\r\n        if (hour < \"7\" || hour >= \"19\")\r\n        {\r\n            weatherPhoto = require('./assets/weather/wNight.png')\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div class=\"weather\" style={{display: 'flex', justifyContent:'center', alignItems: 'center'}}>\r\n                    <span>\r\n                        <text>{currentTemp}&#8451;</text>\r\n                    </span>\r\n                    <img\r\n                        src={weatherPhoto}\r\n                        height=\"50\"\r\n                        width=\"50\"\r\n                        />\r\n                </div>\r\n                <div class=\"weather-desc\" style={{display: 'flex', justifyContent:'center', alignItems: 'center'}}>\r\n                    <span>\r\n                        <text>{capitalizedDesc}</text>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DummyWeather\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}